"""create core tables-p2

Revision ID: 307f7541fd75
Revises: 57eecdcc0376
Create Date: 2025-09-07 23:33:39.957734

"""

from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "307f7541fd75"
down_revision: Union[str, Sequence[str], None] = "57eecdcc0376"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "domain_allowlist",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("domain", sa.String(length=255), nullable=False),
        sa.Column("note", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__domain_allowlist")),
        sa.UniqueConstraint("domain", name="uq_domain_allowlist_domain"),
    )
    op.create_table(
        "domain_denylist",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("domain", sa.String(length=255), nullable=False),
        sa.Column("reason", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__domain_denylist")),
        sa.UniqueConstraint("domain", name="uq_domain_denylist_domain"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("email", sa.String(length=320), nullable=False),
        sa.Column("password_hash", sa.String(length=255), nullable=False),
        sa.Column("role", sa.Enum("admin", "editor", name="user_role"), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("last_login_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__users")),
    )
    op.create_index("uq_users_email_lower", "users", [sa.literal_column("lower(email)")], unique=True)
    op.create_table(
        "links",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("owner_id", sa.UUID(), nullable=False),
        sa.Column("slug", sa.String(length=64), nullable=False),
        sa.Column("target_url", sa.Text(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("redirect_type", sa.SmallInteger(), nullable=False),
        sa.Column(
            "safety_status", sa.Enum("pending", "safe", "blocked", "suspicious", name="safety_status"), nullable=False
        ),
        sa.Column("safety_tags", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("last_checked_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.CheckConstraint("slug ~ '^[A-Za-z0-9_-]{1,32}$'", name=op.f("ck__links__slug_pattern")),
        sa.ForeignKeyConstraint(
            ["owner_id"], ["users.id"], name=op.f("fk__links__owner_id__users"), ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__links")),
    )
    op.create_index("ix_links_created_at", "links", ["created_at"], unique=False)
    op.create_index("ix_links_owner_id", "links", ["owner_id"], unique=False)
    op.create_index("ix_links_status", "links", ["safety_status"], unique=False)
    op.create_index("uq_links_slug_lower", "links", [sa.literal_column("lower(slug)")], unique=True)
    op.create_table(
        "click_events",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("link_id", sa.UUID(), nullable=False),
        sa.Column("ts", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("ip_hash", sa.String(length=64), nullable=True),
        sa.Column("ua_hash", sa.String(length=64), nullable=True),
        sa.Column("referer_domain", sa.String(length=255), nullable=True),
        sa.Column("country_code", sa.String(length=2), nullable=True),
        sa.Column("http_status", sa.SmallInteger(), nullable=True),
        sa.ForeignKeyConstraint(
            ["link_id"], ["links.id"], name=op.f("fk__click_events__link_id__links"), ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", "link_id", name=op.f("pk__click_events")),
    )
    op.create_index("ix_clicks_link_id_ts", "click_events", ["link_id", sa.literal_column("ts DESC")], unique=False)
    op.create_table(
        "link_stats_daily",
        sa.Column("link_id", sa.UUID(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("clicks", sa.BigInteger(), nullable=False),
        sa.Column("unique_ips", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["link_id"], ["links.id"], name=op.f("fk__link_stats_daily__link_id__links"), ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("link_id", "date", name=op.f("pk__link_stats_daily")),
    )
    op.create_index("ix_stats_link_date", "link_stats_daily", ["link_id", "date"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_stats_link_date", table_name="link_stats_daily")
    op.drop_table("link_stats_daily")
    op.drop_index("ix_clicks_link_id_ts", table_name="click_events")
    op.drop_table("click_events")
    op.drop_index("uq_links_slug_lower", table_name="links")
    op.drop_index("ix_links_status", table_name="links")
    op.drop_index("ix_links_owner_id", table_name="links")
    op.drop_index("ix_links_created_at", table_name="links")
    op.drop_table("links")
    op.drop_index("uq_users_email_lower", table_name="users")
    op.drop_table("users")
    op.drop_table("domain_denylist")
    op.drop_table("domain_allowlist")
    # ### end Alembic commands ###
